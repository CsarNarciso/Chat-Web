services:
  chat:
    build: .
    ports:
      - "8002:8002"
    environment:
      SPRING_DATA_CASSANDRA_KEYSPACE_NAME: ${SPRING_DATA_CASSANDRA_KEYSPACE_NAME}
      SPRING_DATA_CASSANDRA_CONTACT_POINTS: ${SPRING_DATA_CASSANDRA_CONTACT_POINTS}
      SPRING_DATA_CASSANDRA_PORT: ${SPRING_DATA_CASSANDRA_PORT}
      SPRING_DATA_CASSANDRA_LOCAL_DATACENTER: ${SPRING_DATA_CASSANDRA_LOCAL_DATACENTER}
      SPRING_DATA_CASSANDRA_SCHEMA_ACTION: ${SPRING_DATA_CASSANDRA_SCHEMA_ACTION}
      SPRING_DATA_CASSANDRA_CREATE_KEYSPACE: ${SPRING_DATA_CASSANDRA_CREATE_KEYSPACE}
    depends_on:
      discovery:
        condition: service_healthy
      configuration:
        condition: service_healthy
      kafka:
        condition: service_healthy
      chat-db:
        condition: service_healthy
      chat-redis:
        condition: service_healthy
    networks:
      - discovery-net
      - kafka-net
      - chat-net
    healthcheck:
      test: [ "CMD", "curl", "--fail", "--silent", "localhost:8002/actuator/health" ]
      start_period: 20s
      interval: 10s
      timeout: 5s
      retries: 5
  chat-db:
    image: cassandra
    ports:
      - "9042:9042"
    networks:
      - chat-net
    volumes:
      - chat-db-vol:/var/lib/cassandra
    healthcheck:
      test: ["CMD", "cqlsh", "-u cassandra", "-p cassandra", "-k ${CASSANDRA_KEYSPACE}"]
      start_period: 20s
      interval: 10s
      timeout: 5s
      retries: 5
  chat-redis:
    image: redis
    ports:
      - "6382:6382"
    networks:
      - chat-net
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      start_period: 20s
      interval: 10s
      timeout: 5s
      retries: 5
networks:
  chat-net:
volumes:
  chat-db-vol: