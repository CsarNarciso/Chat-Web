#Discovery, Config server, Postgres

#Application
spring:
  application:
    name: chat-service
    
  #PostgreSQL Datasource
  datasource:
    url: jdbc:postgresql://localhost:5432/chat-web-db
    username: postgres
    password: letmein
    driver-class-name: org.postgresql.Driver
  #Hibernate JPA
  jpa:
    hibernate:
      ddl-auto: create-drop
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        
  #Circuit Breaker
  cloud:
    openfeign:
      circuitbreaker:
        enabled: true
        
  #Config client
    config:
      uri: configuration-service
      discovery:
        enabled: true
        serviceId: configuration-service
  config:
    import: optional:configserver:lb://configuration-service
    
  #Kafka Config
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      properties:
        spring:
          json:
            trusted:
              packages: "*"
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      properties:
        spring:
          json:
            trusted:
              packages: "*"
      group-id: ${spring.application.name}
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      
#Redis
redis:
  hostname: localhost
  port: 6379
  
#Services
services:
  user:
    name: user-service
    path: /users
  presence:
    name: presence-service
    path: /presences
  
#Eureka client
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka