#Application
spring:
  application:
    name: chat-service
  #Cassandra DB
  data:
    cassandra:
      keyspace-name: chat
      contact-points: http://chat-db
      port: 9042
      localDatacenter: datacenter1
      schemaAction: CREATE_IF_NOT_EXISTS
      createKeyspace: true
  #Config client
  cloud:
    config:
      uri: configuration-service
      discovery:
        enabled: true
        serviceId: configuration-service
  config:
    import: optional:configserver:lb://configuration-service
  #Kafka Config
  kafka:
    bootstrap-servers: http://kafka:9092
    properties:
      spring:
        json:
          trusted:
            packages: *
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: ${spring.application.name}
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
#Redis
redis:
  hostname: http://chat-redis
  port: 6382
#Eureka client
eureka:
  client:
    serviceUrl:
      defaultZone: http://discovery:8761/eureka
#Services
services:
  user:
    name: user-service
    path: /users
  presence:
    name: presence-service
    path: /presences
