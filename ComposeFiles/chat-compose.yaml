services:
  chat:
    build: Chat/.
    ports:
      - "8002:8002"
    env_file:
      - Chat/.env
    environment:
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
      - SPRING_JPA_HIBERNATE_DDL_AUTO=${SPRING_JPA_HIBERNATE_DDL_AUTO}
    depends_on:
      discovery:
        condition: service_healthy
      configuration:
        condition: service_healthy
      chat-db:
        condition: service_healthy
      chat-redis:
        condition: service_healthy
    networks:
      - discovery-net
      - chat-db-net
      - chat-redis-net
    volumes:
      - chat-db-vol:/data/postgres
    healthcheck:
      test: [ "CMD", "curl", "--fail", "--silent", "localhost:8002/actuator/health" ]
      start_period: 20s
      interval: 10s
      timeout: 5s
      retries: 5
  chat-db:
    image: cassandra
    ports:
      - "5432:5432"
    env_file:
      - Chat/.env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - chat-db-net
    volumes:
      - chat-db-vol:/data/postgres
    healthcheck:
      test: [ "CMD", "pg_isready", "-d", "db", "-U", "postgres" ]
      start_period: 20s
      interval: 10s
      timeout: 5s
      retries: 5
  chat-redis:
    image: redis
    ports:
      - "5432:5432"
    env_file:
      - Chat/.env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - chat-redis-net
    healthcheck:
      test: [ "CMD", "pg_isready", "-d", "db", "-U", "postgres" ]
      start_period: 20s
      interval: 10s
      timeout: 5s
      retries: 5
networks:
  chat-db-net:
  chat-redis-net:
volumes:
  chat-db-vol: