#Application
spring:
  application:
    name: social-service
  #Postgres datasource
  datasource:
    driverClassName: org.postgresql.Driver
  #Hibernate JPA
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  #Config client
  cloud:
    config:
      uri: config-service
      discovery:
        enabled: true
        serviceId: ${spring.cloud.config.uri}
  config:
    import: optional:configserver:lb://${spring.cloud.config.uri}
  #Kafka Config
  kafka:
    bootstrap-servers: kafka
    properties:
      spring:
        json:
          trusted:
            packages: *
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: ${spring.application.name}
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
#Eureka client
eureka:
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://eureka-server:8761/eureka