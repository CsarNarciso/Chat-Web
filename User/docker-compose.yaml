services:
  user:
    build: .
    ports:
      - "8001:8001"
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: ${SPRING_JPA_HIBERNATE_DDL_AUTO}
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: ${SPRING_DATASOURCE_DRIVER_CLASS_NAME}
    depends_on:
      discovery:
        condition: service_healthy
      configuration:
        condition: service_healthy
      user-db:
        condition: service_healthy
      user-redis:
        condition: service_healthy
      kafka:
        condition: service_healthy
    networks:
      - discovery-net
      - user-net
    healthcheck:
      test: ["CMD", "curl", "--fail", "--silent", "localhost:8001/actuator/health"]
      start_period: 20s
      interval: 10s
      timeout: 5s
      retries: 5
  user-db:
    image: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - user-net
    volumes:
      - user-db-vol:/data/postgres
    healthcheck:
      test: [ "CMD", "pg_isready", "-d", "db", "-U", "postgres" ]
      start_period: 20s
      interval: 10s
      timeout: 5s
      retries: 5
  user-redis:
    image: redis
    ports:
      - "6379:6379"
    networks:
      - user-net
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      start_period: 20s
      interval: 10s
      timeout: 5s
      retries: 5
networks:
  user-net:
volumes:
  user-db-vol: