#Application
spring:
  application:
    name: user-service
  #PostgreSQL Datasource
  datasource:
    url: jdbc:postgresql://postgres:5432/db
    username: postgres
    password: letmein
    driver-class-name: org.postgresql.Driver
  #Hibernate JPA
  jpa:
    hibernate:
      ddl-auto: create-drop
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  #Config client
  cloud:
    config:
      uri: configuration-service
      discovery:
        enabled: true
        serviceId: configuration-service
  config:
    import: optional:configserver:lb://configuration-service
  #Kafka Config
  kafka:
    bootstrap-servers: kafka:9092
    producer:
      properties:
        spring:
          json:
            trusted:
              packages: "*"
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
#Redis
redis:
  hostname: redis
  port: 6379
#Eureka client
eureka:
  client:
    serviceUrl:
      defaultZone: http://discovery:8761/eureka
#Services
services:
  media:
    name: media-service
    path: /media
#Server
server:
  url: http://localhost:${server.port}
project:
  path: ${user.dir}/Chat-Web/User
#Media
media:
  defaultImage:
    name: DefaultProfileImage.png
    path: src/main/resources/static/${media.defaultImage.name}
