services:

  # Kafka
  kafka:
    image: bitnami/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT'
      KAFKA_LISTENERS: 'INTERNAL://kafka:29092,CONTROLLER://kafka:29093,EXTERNAL://0.0.0.0:9092'
      KAFKA_ADVERTISED_LISTENERS: 'INTERNAL://kafka:29092,EXTERNAL://localhost:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'INTERNAL'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      CLUSTER_ID: 'ciWo7IWazngRchmPES6q5A=='
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
    networks:
      - chat-web-net
    restart: always
    healthcheck:
      test: kafka-topics.sh --list --bootstrap-server localhost:9092 || exit 1
      start_period: 60s
      interval: 20s
      timeout: 10s
      retries: 5

  # Postgres
  postgres:
    image: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: chat-web-db
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: letmein
    networks:
      - chat-web-net
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d", "db" ]
      start_period: 20s
      interval: 10s
      timeout: 5s
      retries: 5

  #Redis
  redis:
    image: redis
    ports:
      - "6379"
    networks:
      - chat-web-net
    restart: always
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      start_period: 20s
      interval: 10s
      timeout: 5s
      retries: 5


networks:
  chat-web-net: